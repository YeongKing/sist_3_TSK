
package day1228;
/*
쉬프트연산자
<< : left shift - 비트를 왼쪽으로 밀고, 밀어서 빈칸을 항상 0으로 채운다.
>> : right shift - 비트를 오른쪽으로 밀고, 밀어서 빈칸을 최상위비트와 같은 양수면0을 음수면 1로 채운다.
>>> : unsigned right shift - 빈칸을 오른쪽으로 밀고, 밀어서 빈칸을 항상 0으로 채운다.
*/



class Operator3{
	public static void main(String[] args) {
		
	int i = 5;
	System.out.println(i+" << 3 = " +(i << 3));
	//0000 0000 0000 0101
	//0000 0000 0010 1000
	//  0    0   32   8  -> 40


	i = 75;
	System.out.println(i+" >> 2 = " +(i >> 2));
	//0000 0000 0100 1011
	//0000 0000 0001 0010
	//  0    0   16   2  -> 18
	

	i = 29;
	System.out.println(i+" >> 1 = " +(i >> 1));
	//0000 0000 0001 1101
	//0000 0000 0000 1110
	//  0    0    0   14 -> 14

	i = 1;
	System.out.println(i+" << 31 = " +(i << 31));
	//0000 0000 0000 0001
	//1000 0000 0000 0000
	//-2147483648

	i = 1;
	System.out.println(i+" << 32 = " +(i << 32));
	//0000 0000 0000 0001
	//0000 0000 0000 0001
	//  0    0    0    1 -> 1

	i = 1;
	System.out.println(i+" << 33 = " +(i << 33));
	//0000 0000 0000 0001
	//0000 0000 0000 0010
	//  0    0    0    2 -> 2

	i = 6;
	System.out.println(i+" << 31 = " +(i << 31));
	//0000 0000 0000 0000 0000 0000 0000 0110
	//1000 0000 0000 0000 0000 0000 0000 0001
	//					                      -> 0

	i = -1;
	System.out.println(i+" >> 5 = " +(i >> 5));
	//1111 1111 1111 1111 1111 1111 1111 1111
	//1111 1111 1111 1111 1111 1111 1111 1111
	//                     ->-1

	i = -1;
	System.out.println(i+" >>> 1 = " +(i >>> 1));
	//1111 1111 1111 1111 1111 1111 1111 1111
	//0111 1111 1111 1111 1111 1111 1111 1111
	//2147483647






	}//main
}//class
